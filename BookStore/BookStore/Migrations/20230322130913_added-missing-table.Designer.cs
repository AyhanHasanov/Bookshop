// <auto-generated />
using System;
using BookStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230322130913_added-missing-table")]
    partial class addedmissingtable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStore.Data.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Захари Карабашлиев",
                            Created = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 18.5,
                            PublisherId = 1,
                            Quantity = 100,
                            Title = "Опашката"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Дамян Дамянов",
                            Created = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 22.600000000000001,
                            PublisherId = 6,
                            Quantity = 50,
                            Title = "Избрани стихотворения"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Георги Господинов",
                            Created = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20.0,
                            PublisherId = 2,
                            Quantity = 500,
                            Title = "Времеубежище"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Джордж Оруел",
                            Created = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 17.989999999999998,
                            PublisherId = 3,
                            Quantity = 30,
                            Title = "1984"
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Виктор Пасков",
                            Created = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 19.899999999999999,
                            PublisherId = 5,
                            Quantity = 15,
                            Title = "Аутопсия на една любов"
                        },
                        new
                        {
                            BookId = 6,
                            Author = "Константин Трендафилов",
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15.0,
                            PublisherId = 4,
                            Quantity = 1500,
                            Title = "Имам нещо да ти кажа"
                        },
                        new
                        {
                            BookId = 7,
                            Author = "Антоан Дьо Екзюпери",
                            Created = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 7.9000000000000004,
                            PublisherId = 1,
                            Quantity = 3000,
                            Title = "Малкият Принц"
                        });
                });

            modelBuilder.Entity("BookStore.Data.Models.BookCourrier", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CourrierId")
                        .HasColumnType("int");

                    b.Property<string>("CourrierPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.HasIndex("BookId");

                    b.HasIndex("CourrierId");

                    b.ToTable("BookCourriers");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            BookId = 2,
                            CourrierId = 3,
                            CourrierPhoneNumber = "+359875740295",
                            DeliveryDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 2,
                            BookId = 3,
                            CourrierId = 1,
                            CourrierPhoneNumber = "135987455740295",
                            DeliveryDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BookStore.Data.Models.Courrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courriers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Econt"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Speedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "FedEx"
                        },
                        new
                        {
                            Id = 4,
                            Name = "EuropaRoads"
                        });
                });

            modelBuilder.Entity("BookStore.Data.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ciela"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Knigomania"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bard"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Labyrinth"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Emgont"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bloomsbury"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Unknown"
                        });
                });

            modelBuilder.Entity("BookStore.Data.Models.Book", b =>
                {
                    b.HasOne("BookStore.Data.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookStore.Data.Models.BookCourrier", b =>
                {
                    b.HasOne("BookStore.Data.Models.Book", "Book")
                        .WithMany("bookCourriers")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Data.Models.Courrier", "Courrier")
                        .WithMany("bookCourriers")
                        .HasForeignKey("CourrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
